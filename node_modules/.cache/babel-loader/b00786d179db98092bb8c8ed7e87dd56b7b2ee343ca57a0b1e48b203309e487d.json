{"ast":null,"code":"var _jsxFileName = \"/Users/bandurabohdan/Desktop/todo/src/Components/Todo.jsx\",\n  _s = $RefreshSig$();\nimport { IconButton, TextField, Tooltip } from \"@mui/material\";\nimport { useState } from \"react\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Edit from \"@mui/icons-material/Edit\";\nimport Check from \"@mui/icons-material/Check\";\nimport CheckBoxOutlineBlank from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBox from \"@mui/icons-material/CheckBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Todo({\n  todo,\n  todos,\n  setTodos\n}) {\n  _s();\n  const [editingTodo, setEditingTodo] = useState(null);\n  const [expand, setExpand] = useState(false);\n  const editTodo = id => {\n    setEditingTodo(id);\n  };\n  const saveEditedTodo = (id, newName) => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      name: newName\n    } : todo));\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const toggleTodoStatus = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n  const expandText = () => {\n    setExpand(expand => !expand);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    onClick: expandText,\n    children: editingTodo === todo.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Edit your todo\",\n        variant: \"standard\",\n        size: \"small\",\n        onChange: e => saveEditedTodo(todo.id, e.target.value),\n        style: {\n          width: \"550px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => setEditingTodo(null),\n        children: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n        title: todo.name,\n        placement: \"top-start\",\n        slotProps: {\n          popper: {\n            modifiers: [{\n              name: 'offset',\n              options: {\n                offset: [0, -11]\n              }\n            }]\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todo_text\",\n          style: todo.completed ? {\n            textDecoration: \"line-through\",\n            opacity: \"30%\"\n          } : {},\n          value: todo.name,\n          children: todo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo_actions\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => editTodo(todo.id),\n          children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => deleteTodo(todo.id),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => toggleTodoStatus(todo.id),\n          children: !todo.completed ? /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlank, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(CheckBox, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Todo, \"5YSWHDriiYXPtc75xEobmnkUpbI=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["IconButton","TextField","Tooltip","useState","DeleteIcon","Edit","Check","CheckBoxOutlineBlank","CheckBox","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","todo","todos","setTodos","_s","editingTodo","setEditingTodo","expand","setExpand","editTodo","id","saveEditedTodo","newName","map","name","deleteTodo","filter","toggleTodoStatus","completed","expandText","className","onClick","children","label","variant","size","onChange","e","target","value","style","width","fileName","_jsxFileName","lineNumber","columnNumber","title","placement","slotProps","popper","modifiers","options","offset","textDecoration","opacity","_c","$RefreshReg$"],"sources":["/Users/bandurabohdan/Desktop/todo/src/Components/Todo.jsx"],"sourcesContent":["import { IconButton, TextField, Tooltip } from \"@mui/material\";\nimport { useState } from \"react\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Edit from \"@mui/icons-material/Edit\";\nimport Check from \"@mui/icons-material/Check\";\nimport CheckBoxOutlineBlank from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBox from \"@mui/icons-material/CheckBox\";\n\nfunction Todo({ todo, todos, setTodos }) {\n\n  const [editingTodo, setEditingTodo] = useState(null)\n  const [expand, setExpand] = useState(false)\n\n  const editTodo = (id) => {\n    setEditingTodo(id);\n  };\n\n  const saveEditedTodo = (id, newName) => {\n    setTodos(todos.map(todo =>\n      todo.id === id ? { ...todo, name: newName } : todo\n    ))\n  }\n\n  const deleteTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  const toggleTodoStatus = (id) => {\n    setTodos(todos.map(todo => (\n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\n    )))\n  }\n\n  const expandText = () => {\n    setExpand(expand => !expand)\n  }\n\n  return (\n    <div className=\"todo\" onClick={expandText}>\n      {editingTodo === todo.id ?\n        <>\n          <TextField\n            label=\"Edit your todo\"\n            variant=\"standard\"\n            size=\"small\"\n            onChange={(e) => saveEditedTodo(todo.id, e.target.value)}\n            style={{width: \"550px\"}}\n          />\n          <IconButton onClick={() => setEditingTodo(null)}>\n            <Check/>\n          </IconButton>\n        </> :\n        <>\n          <Tooltip\n            title={todo.name}\n            placement=\"top-start\"\n            slotProps={{popper: {modifiers: [{name: 'offset',options: {offset: [0, -11],},},],},}}\n          >\n            <p\n              className=\"todo_text\"\n              style={todo.completed ? {textDecoration: \"line-through\", opacity: \"30%\"}: {}}\n              value={todo.name}\n            >\n              {todo.name}\n            </p>\n          </Tooltip>\n          <div className=\"todo_actions\">\n            <IconButton onClick={() => editTodo(todo.id)}>\n              <Edit/>\n            </IconButton>\n            <IconButton onClick={() => deleteTodo(todo.id)}>\n              <DeleteIcon/>\n            </IconButton>\n            <IconButton onClick={() => toggleTodoStatus(todo.id)}>\n              {!todo.completed ? <CheckBoxOutlineBlank/> : <CheckBox/>}\n            </IconButton>\n          </div>\n        </>\n      }\n    </div>\n   );\n}\n\nexport default Todo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}